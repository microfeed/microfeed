name: Deploy to Cloudflare Pages

on:
  # push:
  #  branches: ["dev-v1"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: borales/actions-yarn@v3.0.0
        with:
          cmd: install
      - name: Create and populate .dev.vars file
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          PROJECT_NAME: ${{ secrets.CLOUDFLARE_PROJECT_NAME }}
          R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          R2_BUCKET: ${{ secrets.R2_BUCKET }}
          MEDIA_BASE_URL: ${{ secrets.MEDIA_BASE_URL }}
          ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
        run: |
          cat <<EOF > .dev.vars
          PROJECT_NAME = "$PROJECT_NAME"
          ACCOUNT_ID = "$CLOUDFLARE_ACCOUNT_ID"
          R2_ACCESS_KEY_ID = "$R2_ACCESS_KEY_ID"
          R2_SECRET_ACCESS_KEY = "$R2_SECRET_ACCESS_KEY"
          R2_BUCKET = "$R2_BUCKET"
          MEDIA_BASE_URL = "$MEDIA_BASE_URL"
          PAGES_SECRET_ACCESS_KEY = "$CLOUDFLARE_API_TOKEN"
          ADMIN_USERNAME = "$ADMIN_USERNAME"
          ADMIN_PASSWORD = "$ADMIN_PASSWORD"
          ENVIRONMENT = "development"
          LISTEN_HOST_VERSION = "v1"
          NODE_VERSION = "17.0"
          EOF
      - name: Create and populate .production.vars file
        run: |
          cat <<EOF > .dev.vars
          ENVIRONMENT = "production"
          EOF
      - uses: borales/actions-yarn@v3.0.0
        with:
          cmd: deploy:direct
